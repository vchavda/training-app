name: CI

on:
  push:
    branches: [ '**' ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: install oc
        run: |
          wget https://mirror.openshift.com/pub/openshift-v4/clients/ocp/4.17.8/openshift-client-linux-4.17.8.tar.gz
          tar zxvf openshift-client-linux-4.17.8.tar.gz
          chmod +x oc
          mv oc /usr/local/bin
 
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build podman image
        run: podman build -t flask-app .

      - name: Run Flask container
        run: podman run --name flask-test -d -p 5000:5000 flask-app

      - name: Wait for Flask to be ready
        run: |
          for i in {1..10}; do
            if curl --silent --fail http://localhost:5000/; then
              echo "Flask is up!"
              break
            fi
            echo "Waiting for Flaskâ€¦"
            sleep 1
          done

      - name: Run API tests
        run: pytest tests/test_app.py -v 
        
      - name: Run API tests
        run: pytest tests/test_app.py -v  

      - name: Login to OpenShift cluster
        env:
          OPENSHIFT_API_TOKEN: ${{ secrets.OPENSHIFT_API_TOKEN }}
          OPENSHIFT_SERVER_URL: ${{ secrets.OPENSHIFT_SERVER_URL }}
        run: |
          oc login --token=$OPENSHIFT_API_TOKEN --server=$OPENSHIFT_SERVER_URL
      - name: Select project and deploy pod
        env:
          PROJECT_NAME: vchavdaand
        run: |
          oc project $PROJECT_NAME
          oc delete pod flask-app --ignore-not-found=true
          oc run flask-app --image ghcr.io/${{ github.repository_owner }}/training-app:latest --port 5000 --port 5000
 

      - name: Teardown container
        if: always()
        run: |
          podman stop flask-test
          podman rm flask-test

